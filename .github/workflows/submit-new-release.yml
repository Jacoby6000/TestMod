name: Create issue to register release
on:
  release:
    types: 
      - published
      - edited

jobs:
  create-new-release-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Check for pak
        id: pak-check
        run: |
          TAG="${{ github.event.release.tag_name }}"
          REPO="${{ github.event.repository.full_name }}"
        
          # Fetch the release details for the given tag
          RELEASE_DETAILS=$(gh release view "$TAG" --repo="$REPO" --json assets,published_at,draft)
          
          # Check if the release is a draft
          IS_DRAFT=$(echo "$RELEASE_DETAILS" | jq -r '.draft')
          
          # Extract the published date
          PUBLISHED_AT=$(echo "$RELEASE_DETAILS" | jq -r '.published_at')
          
          # Check if any asset has a ".pak" extension
          ASSETS=$(echo "$RELEASE_DETAILS" | jq -r '.assets[].name')
          should_register=false
          for asset in $ASSETS; do
              if [[ $asset == *".pak"* ]]; then
                  should_register=true
                  break
              fi
          done
          
          # Print the result
          if [ "$IS_DRAFT" = "true" ]; then
              should_register=false
          elif [ -z "$PUBLISHED_AT" ]; then
              should_register=false
          fi

          echo "should_continue=$should_register" >> $GITHUB_OUTPUT  
        env:
          GH_TOKEN: ${{ github.token }}
          
      - name: create an issue
        uses: dacbd/create-issue-action@main
        if: steps.pak-check.outputs.should_continue == 'true'
        with:
          token: ${{ secrets.CHIVALRY_2_UNCHAINED_RELEASE_BOT_TOKEN }}
          owner: Chiv2-Community
          repo: C2ModRegistry
          title: Version ${{ github.event.release.tag_name }} released for ${{ github.event.repository.full_name }}
          body: |
            A new release has been created for `${{ github.event.repository.full_name }}` by `${{ github.actor }}`

            ```json
            {
              "repo_url": "${{ github.event.repository.html_url }}",
              "release_tag": "${{ github.event.release.tag_name }}"
            }
            ```
